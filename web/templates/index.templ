package templates

// Если потребуется, добавьте:
// import "github.com/a-h/templ"

templ IndexPage() {
<!DOCTYPE html>
<html lang="ru">
<head>
	<meta charset="UTF-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
	<title>Конвертер React в Templ + HTMX</title>

	<!-- Подключаем HTMX, Bootstrap, Highlight.js -->
	<script src="https://unpkg.com/htmx.org@1.9.5" integrity="sha384-xcuj3WpfgjlKF+FXhSQFQ0ZNr39ln+hwjN3npfM9VBnUskLolQAcN80McRIVOPuO" crossorigin="anonymous"></script>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"/>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/default.min.css"/>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/typescript.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js"></script>

	<style>
		body {
			padding: 2rem;
		}
		.code-section {
			margin-top: 1rem;
			position: relative;
		}
		.code-container {
			position: relative;
			overflow: hidden;
			border-radius: 5px;
		}
		.code-header {
			display: flex;
			justify-content: space-between;
			align-items: center;
			padding: 0.5rem 1rem;
			background-color: #f3f4f6;
			border: 1px solid #e5e7eb;
			border-bottom: none;
			border-top-left-radius: 5px;
			border-top-right-radius: 5px;
		}
		.code-content {
			max-height: 400px;
			overflow-y: auto;
			border: 1px solid #e5e7eb;
			border-bottom-left-radius: 5px;
			border-bottom-right-radius: 5px;
		}
		.code-content pre {
			margin: 0;
			padding: 1rem;
		}
		.copy-btn {
			padding: 0.25rem 0.5rem;
			font-size: 0.875rem;
		}
		#drag-drop-area {
			border: 2px dashed #ddd;
			border-radius: 5px;
			padding: 2rem;
			text-align: center;
			background-color: #f8f9fa;
			cursor: pointer;
			transition: background-color 0.3s;
		}
		#drag-drop-area:hover {
			background-color: #e9ecef;
		}
		#drag-drop-area.dragover {
			background-color: #e2e6ea;
			border-color: #6c757d;
		}
	</style>
</head>
<body>
	<div class="container">
		<h1 class="mb-4">Конвертер React/TypeScript в Templ + HTMX</h1>

		<div class="row">
			<div class="col-md-6">
				<div class="card">
					<div class="card-body">
						<h5 class="card-title">Загрузите React компонент</h5>

						<form id="upload-form" hx-post="/api/convert" hx-encoding="multipart/form-data" hx-target="#result-container" hx-indicator="#loading">
							<div id="drag-drop-area" onclick="document.getElementById('file-input').click();">
								<p>Перетащите файл сюда или кликните для выбора</p>
								<p class="text-muted small">Поддерживаемые форматы: .tsx, .jsx, .ts, .js</p>
							</div>

							<input type="file" id="file-input" name="reactComponent" accept=".tsx,.jsx,.ts,.js" style="display: none;"/>

							<div class="form-check mt-3">
								<input class="form-check-input" type="checkbox" id="useHtmx" name="useHtmx" checked/>
								<label class="form-check-label" for="useHtmx">
									Использовать HTMX для интерактивности
								</label>
							</div>

							<button type="submit" class="btn btn-primary mt-3" id="convert-btn" disabled>
								Конвертировать
							</button>
						</form>

						<div class="mt-3">
							<h6>Примеры компонентов:</h6>
							<div class="d-flex flex-wrap gap-2">
								<button class="btn btn-sm btn-outline-secondary" onclick="loadExample('Counter')">Счетчик</button>
								<button class="btn btn-sm btn-outline-secondary" onclick="loadExample('TodoList')">Список задач</button>
								<button class="btn btn-sm btn-outline-secondary" onclick="loadExample('TabPanel')">Панель с вкладками</button>
							</div>
						</div>
					</div>
				</div>

				<div class="card mt-4">
					<div class="card-body">
						<h5 class="card-title">Исходный код React</h5>
						<div class="code-section">
							<div class="code-header">
								<span>React компонент</span>
								<button class="btn btn-sm btn-outline-secondary copy-btn" data-target="source-code">Копировать</button>
							</div>
							<div class="code-container code-content">
								<pre><code id="source-code" class="language-typescript">Здесь будет исходный код React компонента</code></pre>
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="col-md-6">
				<div id="result-container">
					<div class="alert alert-info">
						Загрузите React компонент для конвертации
					</div>
				</div>

				<div id="loading" class="htmx-indicator">
					<div class="d-flex justify-content-center mt-4">
						<div class="spinner-border text-primary" role="status">
							<span class="visually-hidden">Загрузка...</span>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>


</body>
</html>
}

templ ConversionResult(templFile string, goController string, htmxJS string) {
<div>
	<div class="alert alert-success">
		<h4 class="alert-heading">Конвертация успешно завершена!</h4>
		<p>Ваш React компонент был успешно преобразован в templ и Go код.</p>
	</div>

	<div class="card mt-3">
		<div class="card-body">
			<h5 class="card-title">Результаты конвертации</h5>

			<ul class="nav nav-tabs" id="resultTabs" role="tablist">
				<li class="nav-item" role="presentation">
					<button class="nav-link active" id="templ-tab" data-bs-toggle="tab" data-bs-target="#templ" type="button" role="tab">
						Templ шаблон
					</button>
				</li>
				<li class="nav-item" role="presentation">
					<button class="nav-link" id="controller-tab" data-bs-toggle="tab" data-bs-target="#controller" type="button" role="tab">
						Go контроллер
					</button>
				</li>
				<li class="nav-item" role="presentation">
					<button class="nav-link" id="js-tab" data-bs-toggle="tab" data-bs-target="#js" type="button" role="tab">
						JavaScript (HTMX)
					</button>
				</li>
			</ul>

			<div class="tab-content mt-3" id="resultTabsContent">
				<div class="tab-pane fade show active" id="templ" role="tabpanel">
					<div class="code-section">
						<div class="code-header">
							<span>Templ шаблон</span>
							<button class="btn btn-sm btn-outline-secondary copy-btn" data-target="templ-code">Копировать</button>
						</div>
						<div class="code-container code-content">
							<pre><code id="templ-code" class="language-go">{templFile}</code></pre>
						</div>
					</div>
				</div>

				<div class="tab-pane fade" id="controller" role="tabpanel">
					<div class="code-section">
						<div class="code-header">
							<span>Go контроллер</span>
							<button class="btn btn-sm btn-outline-secondary copy-btn" data-target="controller-code">Копировать</button>
						</div>
						<div class="code-container code-content">
							<pre><code id="controller-code" class="language-go">{goController}</code></pre>
						</div>
					</div>
				</div>

				<div class="tab-pane fade" id="js" role="tabpanel">
					<div class="code-section">
						<div class="code-header">
							<span>JavaScript (HTMX)</span>
							<button class="btn btn-sm btn-outline-secondary copy-btn" data-target="js-code">Копировать</button>
						</div>
						<div class="code-container code-content">
							<pre><code id="js-code" class="language-javascript">{htmxJS}</code></pre>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="card mt-3">
		<div class="card-body">
			<h5 class="card-title">Использование сконвертированного кода</h5>

			<div class="accordion" id="usageAccordion">
				<div class="accordion-item">
					<h2 class="accordion-header">
						<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne">
							Установка зависимостей
						</button>
					</h2>
					<div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#usageAccordion">
						<div class="accordion-body">
							<p>1. Установите библиотеку templ:</p>
							<div class="code-container mb-3">
								<pre><code class="language-bash">go install github.com/a-h/templ/cmd/templ@latest</code></pre>
							</div>

							<p>2. Если вы используете HTMX, добавьте его в ваш проект:</p>
							<div class="code-container">
								<pre><code class="language-html">&lt;script src="unpkg.com/htmx.org@1.9.5"</code></pre>
							</div>
						</div>
					</div>
				</div>

				<div class="accordion-item">
					<h2 class="accordion-header">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo">
							Структура проекта
						</button>
					</h2>
					<div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#usageAccordion">
						<div class="accordion-body">
							<p>Рекомендуемая структура проекта:</p>
							<div class="code-container">
								<pre><code class="language-bash">your-project/
├── cmd/
│   └── server/
│       └── main.go           # Основная точка входа сервера
├── internal/
│   └── controllers/
│       └── component.go      # Go контроллеры
├── templates/
│   └── component.templ       # Templ шаблоны
└── static/
    └── js/
        └── component.js      # JavaScript для HTMX</code></pre>
							</div>
						</div>
					</div>
				</div>

				<div class="accordion-item">
					<h2 class="accordion-header">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree">
							Компиляция и запуск
						</button>
					</h2>
					<div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#usageAccordion">
						<div class="accordion-body">
							<p>1. Скомпилируйте templ шаблоны:</p>
							<div class="code-container mb-3">
								<pre><code class="language-bash">templ generate</code></pre>
							</div>

							<p>2. Запустите сервер:</p>
							<div class="code-container">
								<pre><code class="language-bash">go run cmd/server/main.go</code></pre>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
}